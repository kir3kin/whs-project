{"version":3,"sources":["webpack://whs-project/./src/assets/modules/slider.js","webpack://whs-project/./src/index.js"],"names":["Slider","sliderSelector","slideIndex","sliderSpeed","this","slider","document","querySelector","activeBtns","slidesCount","sliderWrap","querySelectorAll","length","clientWidth","direct","changeSlide","style","transition","initiation","transform","slideWidth","deactivateCtrlBtns","setTimeout","leftBtn","addEventListener","changeIndex","rightBtn","setSliderSpeed","activeCtrlBtns","init"],"mappings":"2RAAqBA,E,WACpB,WAAYC,GAAmD,IAAnCC,EAAmC,uDAAtB,EAAGC,EAAmB,uDAAL,IAAK,UAC9DC,KAAKH,eAAiBA,EACtBG,KAAKC,OAASC,SAASC,cAAcH,KAAKH,gBAC1CG,KAAKD,YAAcA,EACnBC,KAAKI,YAAa,EAElBJ,KAAKF,WAAcA,GAAc,EAAK,EAAKE,KAAKF,YAAcE,KAAKK,YAAeL,KAAKK,YAAcP,E,0CAGtG,WACC,OAAOE,KAAKC,OAAOE,cAAZ,UAA6BH,KAAKH,eAAlC,gB,oBAGR,WACC,OAAOG,KAAKC,OAAOE,cAAZ,UAA6BH,KAAKH,eAAlC,iB,sBAGR,WACC,OAAOG,KAAKC,OAAOE,cAAZ,UAA6BH,KAAKH,eAAlC,Y,uBAGR,WACC,OAAOG,KAAKM,WAAWC,iBAAiB,8BAA8BC,S,sBAGvE,WACC,OAAOR,KAAKM,WAAWG,c,yBAGxB,SAAYC,GACX,GAAKV,KAAKI,WAAV,CAEA,OAAOM,GACN,IAAK,QACJV,KAAKF,aAEDE,KAAKF,WAAaE,KAAKK,cAC1BL,KAAKF,WAAa,GAGjB,MACH,IAAK,OACJE,KAAKF,aACDE,KAAKF,YAAc,IACtBE,KAAKF,WAAaE,KAAKK,aAK1BL,KAAKW,iB,4BAGN,WACCX,KAAKM,WAAWM,MAAMC,WAAtB,oBAAgDb,KAAKD,YAArD,oB,yBAGD,WAAgC,IAApBe,EAAoB,wDAC/Bd,KAAKM,WAAWM,MAAMG,UAAtB,uBAAkDf,KAAKF,WAAa,GAAKE,KAAKgB,WAA9E,OAGKF,GAAYd,KAAKiB,uB,gCAGvB,WAAqB,WACpBjB,KAAKI,YAAa,EAElBc,YAAW,WACV,EAAKd,YAAa,IAChBJ,KAAKD,e,4BAGT,WAAiB,WAChBC,KAAKmB,QAAQC,iBAAiB,SAAS,kBAAM,EAAKC,YAAY,WAC9DrB,KAAKsB,SAASF,iBAAiB,SAAS,kBAAM,EAAKC,YAAY,c,kBAGhE,WAAO,WACkB,IAApBrB,KAAKF,YAAkBE,KAAKW,aAAY,GAE5CO,YAAW,kBAAM,EAAKK,mBAAkB,GACxCvB,KAAKwB,sB,sBCvEP,IAAI5B,EAAO,eAAgB,EAAG,KAAM6B,OACpC,IAAI7B,EAAO,eAAgB,EAAG,KAAM6B,Q","file":"static/js/index.js","sourcesContent":["export default class Slider {\r\n\tconstructor(sliderSelector, slideIndex = 1, sliderSpeed = 500) {\r\n\t\tthis.sliderSelector = sliderSelector\r\n\t\tthis.slider = document.querySelector(this.sliderSelector);\r\n\t\tthis.sliderSpeed = sliderSpeed\r\n\t\tthis.activeBtns = true\r\n\r\n\t\tthis.slideIndex = (slideIndex <= 1) ? 1 : (this.slideIndex >= this.slidesCount) ? this.slidesCount : slideIndex\r\n\t}\r\n\r\n\tget leftBtn() {\r\n\t\treturn this.slider.querySelector(`${this.sliderSelector}-btn-left`)\r\n\t}\r\n\r\n\tget rightBtn() {\r\n\t\treturn this.slider.querySelector(`${this.sliderSelector}-btn-right`)\r\n\t}\r\n\r\n\tget sliderWrap() {\r\n\t\treturn this.slider.querySelector(`${this.sliderSelector}-wrap`)\r\n\t}\r\n\r\n\tget slidesCount() {\r\n\t\treturn this.sliderWrap.querySelectorAll('[data-slider=slider-slide]').length\r\n\t}\r\n\r\n\tget slideWidth() {\r\n\t\treturn this.sliderWrap.clientWidth\r\n\t}\r\n\r\n\tchangeIndex(direct) {\r\n\t\tif (!this.activeBtns) return\r\n\r\n\t\tswitch(direct) {\r\n\t\t\tcase 'right': {\r\n\t\t\t\tthis.slideIndex++\r\n\r\n\t\t\t\tif (this.slideIndex > this.slidesCount) {\r\n\t\t\t\t\tthis.slideIndex = 1\r\n\t\t\t\t} \r\n\r\n\t\t\t}; break;\r\n\t\t\tcase 'left': {\r\n\t\t\t\tthis.slideIndex--\r\n\t\t\t\tif (this.slideIndex <= 0) {\r\n\t\t\t\t\tthis.slideIndex = this.slidesCount\r\n\t\t\t\t}\r\n\t\t\t}; break;\r\n\t\t}\r\n\r\n\t\tthis.changeSlide()\r\n\t}\r\n\r\n\tsetSliderSpeed() {\r\n\t\tthis.sliderWrap.style.transition = `transform ${this.sliderSpeed}ms ease-in-out`\r\n\t}\r\n\r\n\tchangeSlide(initiation = false) {\r\n\t\tthis.sliderWrap.style.transform = `translateX(-${(this.slideIndex - 1) * this.slideWidth}px)`\r\n\r\n\t\t//* deactivate slider's buttons only if it's not slider initiation\r\n\t\tif (!initiation) this.deactivateCtrlBtns()\r\n\t}\r\n\r\n\tdeactivateCtrlBtns() {\r\n\t\tthis.activeBtns = false;\r\n\t\t//* deactivate slider's buttons for a sliderSpeed time\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.activeBtns = true\r\n\t\t}, this.sliderSpeed);\r\n\t}\r\n\r\n\tactiveCtrlBtns() {\r\n\t\tthis.leftBtn.addEventListener('click', () => this.changeIndex('left'))\r\n\t\tthis.rightBtn.addEventListener('click', () => this.changeIndex('right'))\r\n\t}\r\n\r\n\tinit() {\r\n\t\tif (this.slideIndex !== 1) this.changeSlide(true)\r\n\t\t//* set slider speed after the slider's change \r\n\t\tsetTimeout(() => this.setSliderSpeed(), 0)\r\n\t\tthis.activeCtrlBtns()\r\n\t}\r\n}","// SCSS\nimport './assets/scss/styles'\nimport Slider from './assets/modules/slider'\n\n/********* new Slider($1, $2, $3)\n$1 - slider element\n$2 - active slide\n$3 - switch's speed\n.init() - to active slider\n*********/\nnew Slider('#main-slider', 2, 2000).init()\nnew Slider('#text-slider', 3, 1000).init()"],"sourceRoot":""}